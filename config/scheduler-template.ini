; schedule 参数设置，类似于 cron 表达式
;
; 格式为：[秒(0-59)] [分(0-59)] [时(0-23)] [星期几(0-6 或英文缩写)] [星期(1-53)] [日(1-31)] [月(1-12)] [年(四位数字)]
; （星期几英文缩写：mon,tue,wed,thu,fri,sat,sun）
;
; 字段支持表达式：
; - * 为任意单位时间触发
; - */a 为每 a 个单位时间触发
; - a-b 为 a 到 b 的区间触发
; - a-b/c 为 a 到 b 的区间每 c 个单位时间触发
;
; 详见：https://apscheduler.readthedocs.io/en/v2.1.2/cronschedule.html
;


;
; 实盘易配置
;
[ShiPanE]
host=localhost
port=8888
key=


;
; 交易客户端 client 参数别名列表
;
[ClientAliases]
; 值可以参考实盘易安装目录下的《用户手册.txt》
client1=title:monijiaoyi
client2=title:guotai


;
; 自动新股申购配置
;
[NewStocks]
; 是否启用？
enabled=false

; 默认设置为：星期一至星期五 11:35
schedule=0 35 11 mon-fri * * * *

; 需要自动新股申购的交易客户端列表，以,（半角逗号）分割
; clients=client1,client2
clients=client1


;
; 自动逆回购配置
;
[Repo]
; 是否启用？
enabled=false

; 默认设置为：星期一至星期五 14:55
schedule=0 55 14 mon-fri * * * *

; 需要自动逆回购的交易客户端列表，以,（半角逗号）分割
; clients=client1,client2
clients=client1

security=131810


;
; 批量下单配置
;
[Batch]
; 是否启用？
enabled=false

; 默认设置为：每天晚20点
schedule=0 0 20 * * * * *

; 需要自动新股申购的交易客户端列表，以,（半角逗号）分割
; clients=client1,client2
clients=client1

folder=C:\\batch-orders


[JoinQuant]
username=
password=

; 模拟交易 URL 中 backtestId= 后面的那串字符
; 例如，模拟交易 URL 为：https://www.joinquant.com/algorithm/live/index?backtestId=c215e5e57b30a65df4139bfff8c90e99
; 聚宽的 backtestId 会经常改变，但是指向的都是同一个模拟交易，该配置无需跟着修改
; 则此处填写：c215e5e57b30a65df4139bfff8c90e99
backtest_id=

; 是否启用？
enabled=false

;
; 默认设置为：星期一至星期五 9:00 到 15:00 每分钟的第 30 秒
schedule=30 */1 9-15 mon-fri * * * *

; 需要跟单的交易客户端列表，以,（半角逗号）分割
; clients=client1,client2
clients=client1


;
; 聚宽擂台同步
;
[JoinQuantArena]
; 聚宽账号密码
username=
password=

; 擂台策略 URL 中 post后面字符
; 例如，擂台策略 URL 为：https://www.joinquant.com/post/4805?f=sharelist&m=list
; 则此处填写：4805
; 注意：若填写商城策略，该账户需有权限，否则无法抓取
arena_id=

; 是否启用？
enabled=false

; 调试模式？
; 调试模式不会下单，可用于在收盘阶段进行测试
debug=false

; 默认设置为：星期一至星期五 9:00 到 15:00 每10分钟同步一次
schedule=0 1/10 9-14 mon-fri * * * *

; 同步前是否撤销未成交订单？
; 由于未成交买单会占用可用资金，导致调仓计算不准确。撤销未成交订单可以有效避免该问题。
; 如果实盘账户无人工干预的情况，可以设置为 false。
pre_clear=false

; 需要同步的交易客户端列表，以,（半角逗号）分割
; clients=client1,client2
clients=client1

; 保留名单，每行一个代码或正则表达式
; 比如：B股、港股、逆回购、新股、货币基金等保留的证券代码
; 其中：
; 含有非数字的代码：\D
; B股代码：^[92]
; 港股代码：^[\d]{5}$
; 逆回购代码：^(204|131)
reserved_securities=
    \D
    ^[92]
    ^[\d]{5}$
    ^(204|131)

; 最小订单金额，低于该值的订单将被忽略，以防因为价格波动导致的频繁调仓
; 取值可以为数值，或者百分比
min_order_value=1%

; 最大订单金额，用于分单
; 取值为数值
max_order_value=200000

; 轮次间隔时间，单位为秒
round_interval=10

; 批次间隔时间，单位为秒
batch_interval=1

; 下单间隔时间，单位为秒
order_interval=1

; 额外轮次
extra_rounds=0


[RiceQuant]
username=
password=

; 模拟交易 URL 中 最后一个 / 后面的那串字符
; 例如，模拟交易 URL 为：https://www.ricequant.com/pt/454879/1226010
; 则此处填写：1226010
run_id=

; 是否启用？
enabled=false

;
; 默认设置为：星期一至星期五 9:00 到 15:00 每分钟的第 30 秒
schedule=30 */1 9-15 mon-fri * * * *

; 需要跟单的交易客户端列表，以,（半角逗号）分割
; clients=client1,client2
clients=client1


[Uqer]
username=
password=

; 模拟交易 URL 中 strategy/ 后面的那串字符（不包含 /overview）
; 例如，模拟交易 URL 为：https://uqer.io/trade/strategy/18551/overview
; 则此处填写：18551
strategy=

; 是否启用？
enabled=false

;
; 默认设置为：星期一至星期五 9:00 到 15:00 每分钟的第 30 秒
schedule=30 */1 9-15 mon-fri * * * *

; 需要跟单的交易客户端列表，以,（半角逗号）分割
; clients=client1,client2
clients=client1


;
; 果仁自动同步设置
; 自动同步采用多个轮次，典型的轮次如下：
; 1. 卖单及可用资金可以满足的买单
; 2. 前一次未成交的部分卖单及可用资金可以满足的买单
; 3. 额外轮次将重复步骤 2
;
[Guorn]
username=
password=

; 策略 URL 中 sid= 后面的那串字符
; 例如，策略 URL 为：https://guorn.com/stock/strategy?sid=7379.R.73780198158364
; 则此处填写：7379.R.73780198158364
sid=

; 是否启用？
enabled=false

; 调试模式？
; 调试模式不会下单，可用于在收盘阶段进行测试
debug=false

; 默认设置为：星期一至星期五 9:30 到 15:00 每小时第 40 分
schedule=0 40 9-14 mon-fri * * * *

; 同步前是否撤销未成交订单？
; 由于未成交买单会占用可用资金，导致调仓计算不准确。撤销未成交订单可以有效避免该问题。
; 如果实盘账户无人工干预的情况，可以设置为 false。
pre_clear=false

; 需要同步的交易客户端列表，以,（半角逗号）分割
; clients=client1,client2
clients=client1

; 保留名单，每行一个代码或正则表达式
; 比如：B股、港股、逆回购、新股、货币基金等保留的证券代码
; 其中：
; 含有非数字的代码：\D
; B股代码：^[92]
; 港股代码：^[\d]{5}$
; 逆回购代码：^(204|131)
reserved_securities=
    \D
    ^[92]
    ^[\d]{5}$
    ^(204|131)

; 最小订单金额，低于该值的订单将被忽略，以防因为价格波动导致的频繁调仓
; 取值可以为数值，或者百分比
min_order_value=1%

; 最大订单金额，用于分单
; 取值为数值
max_order_value=200000

; 轮次间隔时间，单位为秒
round_interval=10

; 批次间隔时间，单位为秒
batch_interval=1

; 下单间隔时间，单位为秒
order_interval=1

; 额外轮次
extra_rounds=0
